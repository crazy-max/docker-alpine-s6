name: test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  contents: read

on:
  push:
    branches:
      - 'master'
      - 'releases/*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'master'
      - 'releases/*'
    paths-ignore:
      - '**.md'

env:
  BUILD_TAG: alpinetest

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    strategy:
      fail-fast: false
      matrix:
        test-case:
          - legacy-pureftpd
          - legacy-rrdtool
          - nginx
          - nginx-dist
          - nginx-legacy
          - nginx-legacy-dist
        alpine_version:
          - '3.17'
          - '3.18'
          - '3.19'
          - '3.20'
          - '3.21'
          - '3.22'
          - 'edge'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Prepare
        id: prepare
        uses: actions/github-script@v7
        env:
          INPUT_TEST-CASE: ${{ matrix.test-case }}
        with:
          script: |
            const fs = require('fs');

            const testCase = core.getInput('test-case');
            const testconfigPath = `./test/${testCase}/testconfig.json`;
            if (!fs.existsSync(testconfigPath)) {
              throw new Error(`Test configuration file not found: ${testconfigPath}`);
            }

            const testconfig = JSON.parse(fs.readFileSync(testconfigPath, 'utf8'));
            if (testconfig.logcheck === undefined || testconfig.logcheck.length === 0) {
              throw new Error(`Test configuration file is missing the "logcheck" property or is empty`);
            }

            core.setOutput('logCheck', testconfig.logcheck);
            core.setOutput('target', testconfig.dist ? 'image-dist' : 'image');
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      -
        name: Build ${{ steps.prepare.outputs.target }}
        uses: docker/bake-action@v6
        with:
          source: .
          targets: ${{ steps.prepare.outputs.target }}
          push: true
          set: |
            *.args.ALPINE_VERSION=${{ matrix.alpine_version }}
            *.tags=localhost:5000/alpine-s6
      -
        name: Build ${{ matrix.test-case }}
        uses: docker/build-push-action@v6
        with:
          context: ./test/${{ matrix.test-case }}
          build-args: |
            BASE_IMAGE=localhost:5000/alpine-s6
          load: true
          tags: ${{ env.BUILD_TAG }}
      -
        name: Start ${{ matrix.test-case }}
        run: |
          docker run -d --name ${{ matrix.test-case }} ${{ env.BUILD_TAG }}
      -
        name: Check container logs
        uses: crazy-max/.github/.github/actions/container-logs-check@main
        with:
          container_name: ${{ matrix.test-case }}
          log_check: ${{ steps.prepare.outputs.logCheck }}
          timeout: 120
      -
        name: Container logs
        if: always()
        run: |
          docker logs ${{ matrix.test-case }}

name: build

on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'

env:
  DOCKERHUB_SLUG: crazymax/alpine-s6
  GHCR_SLUG: ghcr.io/crazy-max/alpine-s6
  ALPINE_LATEST: 3.13

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - alpine_version: 3.11
          - alpine_version: 3.12
          - alpine_version: 3.13
          - alpine_version: edge
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Cache Docker layers
        uses: actions/cache@v2.1.4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.alpine_version }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.alpine_version }}-
      -
        name: Prepare
        run: |
          ALPINE_VERSION=${{ matrix.alpine_version }}
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
            VERSION=${TAG%-r*}
          fi
          IMAGE_TAGS=""
          if [[ $ALPINE_VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3} ]]; then
            IMAGE_TAGS="${IMAGE_TAGS}${ALPINE_VERSION}-${VERSION},"
            if [ "$ALPINE_VERSION" = "${{ env.ALPINE_LATEST }}" ]; then
              IMAGE_TAGS="${IMAGE_TAGS}latest-${VERSION},"
            fi
          else
            if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3} ]]; then
              IMAGE_TAGS="${IMAGE_TAGS}${ALPINE_VERSION}-${VERSION},"
            else
              IMAGE_TAGS="${IMAGE_TAGS}${VERSION},"
            fi
          fi
          if [ "$VERSION" != "edge" ]; then
            IMAGE_TAGS="${IMAGE_TAGS}${ALPINE_VERSION},"
            if [ "$ALPINE_VERSION" = "${{ env.ALPINE_LATEST }}" ]; then
              IMAGE_TAGS="${IMAGE_TAGS}latest,"
            fi
          fi
          echo "IMAGE_TAGS=${IMAGE_TAGS}" >> $GITHUB_ENV
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tag-custom: |
            ${{ env.IMAGE_TAGS }}
          tag-custom-only: true
          label-custom: |
            org.opencontainers.image.title=alpine-s6
            org.opencontainers.image.description=Alpine Linux with s6 overlay
            org.opencontainers.image.vendor=CrazyMax
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      -
        name: Build artifacts
        uses: docker/bake-action@v1
        with:
          targets: artifact-all
          set: |
            *.cache-from=type=local,src=/tmp/.buildx-cache
            *.cache-to=type=local,dest=/tmp/.buildx-cache-new
        env:
          ALPINE_VERSION: ${{ matrix.alpine_version }}
      -
        name: Move artifacts
        if: matrix.alpine_version == env.ALPINE_LATEST
        run: |
          mv ./dist/**/* ./dist/
      -
        name: Upload artifacts
        if: matrix.alpine_version == env.ALPINE_LATEST
        uses: actions/upload-artifact@v2
        with:
          name: s6-overlay
          path: ./dist/*
          if-no-files-found: error
      -
        name: Build
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.docker_meta.outputs.bake-file }}
          targets: image-all
          push: ${{ github.event_name != 'pull_request' }}
          set: |
            *.cache-from=type=local,src=/tmp/.buildx-cache-new
        env:
          ALPINE_VERSION: ${{ matrix.alpine_version }}
      -
        name: GitHub Release
        uses: softprops/action-gh-release@v1
        if: matrix.alpine_version == env.ALPINE_LATEST && startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Check manifest
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.docker_meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.GHCR_SLUG }}:${{ steps.docker_meta.outputs.version }}
      -
        name: Check pull
        if: github.event_name != 'pull_request'
        run: |
          docker pull ${{ env.DOCKERHUB_SLUG }}:${{ steps.docker_meta.outputs.version }}
          docker image inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.docker_meta.outputs.version }}
          docker pull ${{ env.GHCR_SLUG }}:${{ steps.docker_meta.outputs.version }}
          docker image inspect ${{ env.GHCR_SLUG }}:${{ steps.docker_meta.outputs.version }}
      -
        # FIXME: https://github.com/docker/build-push-action/issues/252
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
